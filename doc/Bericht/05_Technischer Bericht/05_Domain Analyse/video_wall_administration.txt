Administration der Video Wall
Diser Abschnitt beschreibt, wie die Inhalte der Video Wall verwaltet werden könnten.
h1. Bekannte verwaltende Daten
Zum Abschluss des Projektes sind folgende zu verwaltende Inhalte vorgesehen:
h2. Extensions
Da die einzelnen Applikationen, die mit der Video Wall dargestellt werden können, sich mit der Zeit ändern können, müssen diese Applikationen verwaltet werden. Folgender Ablauf ist dafür vorgesehen:
# Die für die Technik verantwortliche Stelle (INS => TODO: Refs) gibt bekannt, dass für die Video Wall Extensions entwickelt werden können. Dies könnte auf verschiedene Arten erfolgen, wie in einem Modul für den Bachelor, z.B. in einem Software Engineering 2 Projekt, in einer Studien- oder Bachelorarbeit.
# Die Extension Entwickler entwickeln Extensions für die Video Wall.
# Ist ein sinnvoller Stand erreicht, so melden sich die Entwickler bei der für die Technik verantwortlichen Stelle (INS, Markus Stolze).
# Für das Deployment müssen zwei Bedingungen erfüllt werden:
## Die Extension Entwickler müssen garantieren und unterschreiben, dass keine unangebrachten Inhalte (gewaltverherrlichend, erotisch, usw.) in ihrer Extension dargestellt werden. Sollte dies doch passieren, wissen die Entwickler ab diesem Moment, was die Konsequenzen eines solchen Verstosses wären.
## Es wird ein Code Review der Extension durchgeführt, um die Qualität und die Sicherheit des Gesamtsystems zu gewährleisten.
# Das Deploymnet wird durch die für die Technik verantwortliche Stelle (INS) durchgeführt. Alternativ dazu wäre es auch vorstellbar, ein Web Interface zur Verfügung zu stellen, wo die Entwickler der Extension einen Zugang erhalten und die Extension dort hochladen können.
h2. Poster Applikation
Da jedes Semester neue Bachelor Poster entstehen, müssen diese jedes Semester bearbeitet werden. Es ist noch nicht ganz klar, wer diese Aufgabe übernehmen wird, aber wahrscheinlich macht folgender Ablauf Sinn:
# Die Bachelor Poster werden von den Studierenden erstellt.
# Die Studiengangleiter sind verantwortlich, diese Poster in elektronischer Form entgegenzunehmen und inhaltlich zu kontrollieren.
# Die Poster werden von den Studiengangleitern an das Sekretariat übergeben.
# Das Sekretariat pflegt die Inhalte über ein CMS Interface ein.
# (Jederzeit) Berichtigungen können am Sekretariat gemeldet werden, welche die Inhalte korrigiert und ins CMS Interface einpflegt.
h1. Datenverwaltung der Extensions
Da jede Extension über eigene Daten verfügen kann (wie z.B. die Poster Applikation), könnte das Framework ein Interface zur Verfügung stellen, damit die Daten der Extensions verwaltet werden können. Die Extension Entwickler würden Objekte definieren, die verwaltet werden sollen, und das Framework generiert dann automatisch ein GUI für dessen Bearbeitung.
Alternativ könnte jede Extension eine eigene Admin Oberfläche anbieten. Dies ist natürlich weniger praktisch, da bei dieser Variante redundante Funktionen (z.B. das Speichern der Daten in einer Datenbank) programmiert werden müssen und die Bedienung wahrscheinlich nicht einheitlich ist.
h1. Administrationsoberfläche
Für die Administrationoberfläche der Inhalte gibt es verschiedene Möglichkeiten. Die drei Wichtigsten sind nachfolgend kurz beschrieben.
h2. Administration über Typo3 CMS (TODO: ref http://typo3.org
Da das Sekretariat das Typo3 CMS von http://www.hsr.ch bereits kennt und damit arbeitet, wäre eine Integration in dieses System eine Option. Das könnte grundsätzlich auf zwei verschiedene Arten realisiert werden:
h3. Typo3 Extension mit Typo3 DB
Es wird eine Typo3 Extension (TODO: ref http://typo3.org/extensions/repository/) (nicht zu verwechseln mit einer Video Wall Extension) für den Adminbereich entwickelt. Diese Applikation wird sehr einfach gehalten und zeichnet sich vor Allem durch XML Konfigurationen aus, die das Datenbankschema beschreiben. Durch die Installation der Extension im Typo3 wird die Datenbank automatisch erzeugt und die Inhalte können sofort über den Adminbereich von Typo3 bearbeitet werden, da das Framework die ganze grafische Oberfläche automatisch generiert. Somit sieht es dann auch so aus, als ob es sich um eine ganz normale Typo3 Extension handelt und gewisse Standardfunktionaliäten werden ebenfalls automatisch angeboten (z.B. Archivierungsoption, ausblenden von einzelnen Datensätzen, usw.). 
Das Problem an dieser Lösung ist, dass die Daten von der Typo3 Datenbank zur Video Wall migriert werden müssen. Da aber nur eine unidirektionaler Informationsfluss vorhanden sein wird (vom Typo3 zur Video Wall), kann auf einfache Art eine Synchronisation per Cronjob (z.B. alle 15 Minuten) eingerichtet werden, bei der die Daten von der Typo3 Datenbank zur Video Wall synchronisiert/kopiert werden.
Diese Variante ist dann gut geeignet, wenn alle, die an der Video Wall etwas ändern müssen, einen Typo3 Zugriff haben. Speziell für das Sekretariat ist diese Art von Interface auch speziell einfach zu bedienen, da sie dies schon täglich benutzen.
h3. Web Interface und Typo3 Extension mit Iframe (TODO: glossar)
Wie in der ersten Variante ist auch hier eine Typo3 Extension vorgesehen. Dieses mal wird die Extension aber so erstellt, dass nur ein Iframe programmiert wird, das auf einen anderen Web Server verweist. Somit kann die Administrationsoberfläche Typo3 technologieunabhängig entwickelt werden, zum Beispiel mit ASP.NET MVC3 (TODO: glossar).
Die Hauptvorteile dieses Ansatzes sind, dass die Adminoberfläche nicht mit Typo3 programmiert werden muss und trotzdem ins Typo3 integriert ist, und weiter dass die Seite auch ohne Typo3 bearbeitet werden könnte, ggf. mit einem SSO (TODO: Glossar). Dies wäre auch die Variante, die gewählt würde, falls noch mehr Zeit zur Verfügung stehen würde.
h2. Administration über Web Server
Ähnlich wie in der zweiten Typo3 Variante (Web Interface und Typo3 Extension mit Iframe) beschrieben, würde hier auf einem Web Server (z.B. mit ASP.NET MVC3) eine Administrationsoberfläche entwickelt, die ggf. mit dem SSO der HSR gekoppelt wird.
Die Vorteile sind, dass das System klar von anderen Applikationen abgegrenzt ist. Auch ist es so einfach möglich, eine mobile Applikation mit HTML5 zu entwickeln. Als Nachteil ist jedoch aufzufürhren, dass ohne Typo3 Extension die Benutzer auf eine separate URL zugreifen müssen und ihnen das System nicht sofort bekannt vorkommt. Diese Variante könnte statt mit ASP.NET auch mit Silverlight (TODO: Glossar) eingesetzt werden.
h2. Administration über WPF Applikation
In dieser Variante geht es darum, einen WPF Client zu schreiben, mit der die Inhalte bearbeitet werden können. Als Transportprotokoll würde WCF eingesetzt, anders als bei den anderen Varianten, die mit HTTPS/HTML funktionieren.
Der Vorteil dieser Variante ist, dass grosse Teile der Software wiederverwendet werden können (evt. sogar bis zu den Views und ViewModels). Schwer wiegen aber auch die Nachteile, da durch WPF die Plattform eingeschränkt wird und eine mobile Applikation so nicht möglich ist. Deshalb ist von dieser Variante abzuraten.
















